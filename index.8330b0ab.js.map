{"mappings":"AEAe,MAAA,EACX,YAAY,CAAI,CAAE,CACd,IAAI,CAAC,IAAI,CAAG,EAAK,IAAI,CACrB,IAAI,CAAC,KAAK,CAAG,EAAK,KAAK,CACvB,IAAI,CAAC,KAAK,CAAG,EAAK,KAAK,CACvB,IAAI,CAAC,EAAE,CAAG,EAAK,EAAE,AACrB,CACJ,CDNA,IAAI,EAAY,EAAE,CAyBlB,eAAe,IACP,IAAI,EAAO,MAAM,MAAM,4EACvB,IAAI,CAAC,MAAM,GAAmB,AAAA,CAAA,MAAM,EAAS,IAAI,EAAA,EAAI,IAAI,EACrD,IAAI,IAAM,KAAO,EACb,EAAU,IAAI,CAAC,IAAI,EAAS,CAAI,CAAC,EAAI,EAGzC,OAAM,GACd,CA/BJ,AADe,SAAS,aAAa,CAAC,UAC/B,gBAAgB,CAAC,QAAS,KAC/B,SAAS,aAAa,CAAC,WAAW,KAAK,CAAC,UAAU,CAAG,SACrD,SAAS,aAAa,CAAC,eAAe,KAAK,CAAC,UAAU,CAAG,UACzD,GACF,GAEA,SAAS,gBAAgB,CAAC,mBAAoB,WAE5C,AADa,SAAS,cAAc,CAAC,cAChC,gBAAgB,CAAC,QAAS,SAAS,CAAK,MAOzC,EADQ,SAAS,gBAAgB,CAAC,gBAClC,EAAY,AANT,EAMe,MAAM,CAAC,OAAO,CAAC,iBAEnC,EAAU,SAAS,CAAC,MAAM,CAAC,aAP7B,EACF,GAwBI,MAAM,EAAgB,MAAO,IAC3B,IAAM,EAAS,EAAE,CACb,EAAI,EACJ,EAAU,CAAA,EAEd,KAAO,GACL,GAAI,CACF,IAAM,EAAM,MAAM,EAAU,CAAC,6DAA6D,EAAE,EAAS,EAAE,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAClH,EAAO,IAAI,CAAC,GACZ,GACF,CAAE,MAAO,EAAO,CACd,EAAU,CAAA,CACZ,CAGF,OAAO,CACT,EAGM,EAAY,AAAC,GACV,IAAI,QAAQ,CAAC,EAAS,KAC3B,IAAM,EAAM,IAAI,KAChB,CAAA,EAAI,GAAG,CAAG,EACV,EAAI,MAAM,CAAG,IAAM,EAAQ,GAC3B,EAAI,OAAO,CAAG,IAAM,EAAO,AAAI,MAAM,mBACvC,GAII,EAAgB,UACpB,IAAM,EAAa,SAAS,cAAc,CAAC,cAC3C,IAAK,IAAI,KAAY,EAAW,CAC9B,IAAM,EAAkB,SAAS,aAAa,CAAC,MAC/C,CAAA,EAAgB,SAAS,CAAG,gBAC5B,EAAgB,SAAS,CAAG,CAAC,sBAAsB,EAAE,EAAS,IAAI,CAAC;AAAnE;A;A;A;A,mIAK2H,EAAE,EAAS,EAAE,CAAC;AAAd;A;A,2DAGxE,EAAE,EAAS,KAAK,CAAC;AAAjB;A;A;A,kCAIzB,CAAC,CAC3B,EAAW,WAAW,CAAC,GAEvB,IAAM,EAAsB,EAAgB,aAAa,CAAC,MACpD,EAAkB,EAAgB,aAAa,CAAC,cAClD,EAAmB,EACnB,EAAkB,EAAE,CAExB,EAAoB,gBAAgB,CAAC,QAAS,UAC5C,GAAI,AAA2B,IAA3B,EAAgB,MAAM,CAAQ,CAChC,IAAM,EAAS,EAAgB,aAAa,CAAC,UAC7C,CAAA,EAAO,KAAK,CAAC,UAAU,CAAG,UAC1B,EAAkB,MAAM,EAAc,GACtC,EAAO,KAAK,CAAC,UAAU,CAAG,QAC5B,CACA,EAAoB,AAAA,CAAA,EAAmB,CAAA,EAAK,EAAgB,MAAM,CAClE,EAAgB,GAAG,CAAG,CAAe,CAAC,EAAiB,CAAC,GAAG,AAC7D,EACF,CACF","sources":["<anon>","src/js/index.js","src/js/champions.js"],"sourcesContent":["class $bd84cf06d833f8f2$export$2e2bcd8739ae039 {\n    constructor(data){\n        this.name = data.name;\n        this.title = data.title;\n        this.blurb = data.blurb;\n        this.id = data.id;\n    }\n}\n\n\nvar $8f6a480bb40b134f$var$champions = [];\nconst $8f6a480bb40b134f$var$button = document.querySelector(\"button\");\n$8f6a480bb40b134f$var$button.addEventListener(\"click\", ()=>{\n    document.querySelector(\"#button\").style.visibility = \"hidden\";\n    document.querySelector(\"#championss\").style.visibility = \"visible\";\n    $8f6a480bb40b134f$var$startChampions();\n});\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    const card = document.getElementById(\"championss\");\n    card.addEventListener(\"click\", function(event) {\n        $8f6a480bb40b134f$var$flip(event);\n    });\n});\nfunction $8f6a480bb40b134f$var$flip(event) {\n    var cards = document.querySelectorAll(\".card-inner\");\n    var cardInner = event.target.closest(\".card-inner\");\n    if (cardInner) cardInner.classList.toggle(\"is-flipped\");\n}\nasync function $8f6a480bb40b134f$var$startChampions() {\n    let data = await fetch(\"https://ddragon.leagueoflegends.com/cdn/14.20.1/data/es_ES/champion.json\").then(async (response)=>{\n        return (await response.json()).data;\n    });\n    for(const key in data)$8f6a480bb40b134f$var$champions.push(new (0, $bd84cf06d833f8f2$export$2e2bcd8739ae039)(data[key]));\n    await $8f6a480bb40b134f$var$showchampions();\n}\nconst $8f6a480bb40b134f$var$preloadImages = async (champion)=>{\n    const images = [];\n    let i = 0;\n    let skinmax = true;\n    while(skinmax)try {\n        const img = await $8f6a480bb40b134f$var$loadImage(`https://ddragon.leagueoflegends.com/cdn/img/champion/loading/${champion.id}_${i}.jpg`);\n        images.push(img);\n        i++;\n    } catch (error) {\n        skinmax = false;\n    }\n    return images;\n};\nconst $8f6a480bb40b134f$var$loadImage = (src)=>{\n    return new Promise((resolve, reject)=>{\n        const img = new Image();\n        img.src = src;\n        img.onload = ()=>resolve(img);\n        img.onerror = ()=>reject(new Error(\"Image not found\"));\n    });\n};\nconst $8f6a480bb40b134f$var$showchampions = async ()=>{\n    const championss = document.getElementById(\"championss\");\n    for (let champion of $8f6a480bb40b134f$var$champions){\n        const championElement = document.createElement(\"div\");\n        championElement.className = \"champion_name\";\n        championElement.innerHTML = `<div class=\"name\"><h2>${champion.name}</h2></div>\r\n                                    <div class=\"card\">\r\n                                      <div class=\"card-inner\">\r\n                                        <div class=\"card-front\">\r\n                                          <div class=\"loader\"></div>\r\n                                          <img class=\"Front_img\" src=\"https://ddragon.leagueoflegends.com/cdn/img/champion/loading/${champion.id}_0.jpg\">\r\n                                        </div>\r\n                                        <div class=\"card-back\">\r\n                                          <p class=\"blurb\">${champion.blurb}</p>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  `;\n        championss.appendChild(championElement);\n        const championNameElement = championElement.querySelector(\"h2\");\n        const frontImgElement = championElement.querySelector(\".Front_img\");\n        let currentSkinIndex = 0;\n        let preloadedImages = [];\n        championNameElement.addEventListener(\"click\", async ()=>{\n            if (preloadedImages.length === 0) {\n                const loader = championElement.querySelector(\".loader\");\n                loader.style.visibility = \"visible\";\n                preloadedImages = await $8f6a480bb40b134f$var$preloadImages(champion);\n                loader.style.visibility = \"hidden\";\n            }\n            currentSkinIndex = (currentSkinIndex + 1) % preloadedImages.length;\n            frontImgElement.src = preloadedImages[currentSkinIndex].src;\n        });\n    }\n};\n\n\n//# sourceMappingURL=index.8330b0ab.js.map\n","import Champion from './champions';\r\nvar champions = [];\r\nconst button = document.querySelector(\"button\");\r\nbutton.addEventListener(\"click\", () => {\r\n  document.querySelector('#button').style.visibility = 'hidden';\r\n  document.querySelector('#championss').style.visibility = 'visible';\r\n  startChampions();\r\n});\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  const card = document.getElementById('championss');\r\n  card.addEventListener('click', function(event) {\r\n    flip(event);\r\n  });\r\n});\r\n\r\nfunction flip(event) {\r\n  var cards = document.querySelectorAll('.card-inner');\r\n  var cardInner = event.target.closest('.card-inner');\r\n  if (cardInner) {\r\n    cardInner.classList.toggle(\"is-flipped\");\r\n  }\r\n}\r\n\r\n\r\n\r\nasync function startChampions (){\r\n        let data = await fetch(\"https://ddragon.leagueoflegends.com/cdn/14.20.1/data/es_ES/champion.json\")\r\n       .then(async(response)=>{return(await response.json()).data    })\r\n            for(const key in data){\r\n                champions.push(new Champion(data[key]));\r\n                \r\n            }\r\n            await showchampions();\r\n    };\r\n\r\n\r\n\r\n    const preloadImages = async (champion) => {\r\n      const images = [];\r\n      let i = 0;\r\n      let skinmax = true;\r\n    \r\n      while (skinmax) {\r\n        try {\r\n          const img = await loadImage(`https://ddragon.leagueoflegends.com/cdn/img/champion/loading/${champion.id}_${i}.jpg`);\r\n          images.push(img); \r\n          i++; \r\n        } catch (error) {\r\n          skinmax = false; \r\n        }\r\n      }\r\n    \r\n      return images;\r\n    };\r\n    \r\n    \r\n    const loadImage = (src) => {\r\n      return new Promise((resolve, reject) => {\r\n        const img = new Image();\r\n        img.src = src;\r\n        img.onload = () => resolve(img);\r\n        img.onerror = () => reject(new Error('Image not found'));\r\n      });\r\n    };\r\n    \r\n    \r\n    const showchampions = async () => {\r\n      const championss = document.getElementById(\"championss\");\r\n      for (let champion of champions) {\r\n        const championElement = document.createElement('div');\r\n        championElement.className = 'champion_name';\r\n        championElement.innerHTML = `<div class=\"name\"><h2>${champion.name}</h2></div>\r\n                                    <div class=\"card\">\r\n                                      <div class=\"card-inner\">\r\n                                        <div class=\"card-front\">\r\n                                          <div class=\"loader\"></div>\r\n                                          <img class=\"Front_img\" src=\"https://ddragon.leagueoflegends.com/cdn/img/champion/loading/${champion.id}_0.jpg\">\r\n                                        </div>\r\n                                        <div class=\"card-back\">\r\n                                          <p class=\"blurb\">${champion.blurb}</p>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  `;\r\n        championss.appendChild(championElement);\r\n  \r\n        const championNameElement = championElement.querySelector('h2');\r\n        const frontImgElement = championElement.querySelector('.Front_img');\r\n        let currentSkinIndex = 0;\r\n        let preloadedImages = []; \r\n    \r\n        championNameElement.addEventListener('click', async () => {\r\n          if (preloadedImages.length === 0) { \r\n            const loader = championElement.querySelector('.loader');\r\n            loader.style.visibility = 'visible';\r\n            preloadedImages = await preloadImages(champion);\r\n            loader.style.visibility = 'hidden';\r\n          }\r\n          currentSkinIndex = (currentSkinIndex + 1) % preloadedImages.length;\r\n          frontImgElement.src = preloadedImages[currentSkinIndex].src; \r\n        });\r\n      }\r\n    };","export default class Champion {\r\n    constructor(data) {\r\n        this.name = data.name;                                           \r\n        this.title = data.title ;\r\n        this.blurb = data.blurb;\r\n        this.id = data.id;\r\n    }\r\n}"],"names":["$bd84cf06d833f8f2$export$2e2bcd8739ae039","constructor","data","name","title","blurb","id","$8f6a480bb40b134f$var$champions","$8f6a480bb40b134f$var$startChampions","fetch","then","response","json","key","push","$8f6a480bb40b134f$var$showchampions","$8f6a480bb40b134f$var$button","document","querySelector","addEventListener","style","visibility","card","getElementById","event","cardInner","querySelectorAll","target","closest","classList","toggle","$8f6a480bb40b134f$var$preloadImages","champion","images","i","skinmax","img","$8f6a480bb40b134f$var$loadImage","error","src","Promise","resolve","reject","Image","onload","onerror","Error","championss","championElement","createElement","className","innerHTML","appendChild","championNameElement","frontImgElement","currentSkinIndex","preloadedImages","length","loader"],"version":3,"file":"index.8330b0ab.js.map"}